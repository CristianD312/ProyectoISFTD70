/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pantallas.Configuracion;
import Logica.Conexion;
import Objetos.Carrera;
import Objetos.Profesor;
import Objetos.Salon;
import Pantallas.ElementosPersonalizados.TablaCarreras;
import Pantallas.ElementosPersonalizados.TablaProfesores;
import Pantallas.ElementosPersonalizados.TablaSalones;
import com.formdev.flatlaf.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;

/**
 *
 * @author dario
 */

public class Configuracion extends javax.swing.JFrame {
    Conexion conexion;
    ArrayList<Profesor> profesores;
    ArrayList<Carrera> carreras;
    ArrayList<Salon> salones;
    /**
     * Creates new form NewJFrame
     */

    public Configuracion() {
        // Carga de tema
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception e) {
            e.printStackTrace();
        }
        UIManager.put( "Button.arc", 999 );
        conexion = new Conexion();
        //le da la conexion a cada uno de los objetos para que puedan crear un arraylist de si mismos reflejando la base de datos
        Carrera.setConexion(conexion.getConexion());
        Profesor.setConexion(conexion.getConexion());
        Salon.setConexion(conexion.getConexion());
        //Carga los datos en el array interno de la clase
        Carrera.cargarDatos();
        Profesor.cargarDatos();
        Salon.cargarDatos();
        //relaciona el array interno de la clase con los array de la pantalla configuracion (estan sincronizados, cualquier cambien en unoo afecta el otro)
        profesores = Profesor.getProfesores();
        carreras = Carrera.getCarreras();
        salones = Salon.getSalones();
        //carga de componentes
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panelDePesta単as = new javax.swing.JTabbedPane();
        tabSalones = new javax.swing.JLayeredPane();
        tablaSalonesScroll = new javax.swing.JScrollPane();
        tablaSalones = new javax.swing.JTable();
        modificarSalon = new javax.swing.JButton();
        agregarSalon = new javax.swing.JButton();
        tabProfesores = new javax.swing.JLayeredPane();
        tablaProfesoresScroll = new javax.swing.JScrollPane();
        tablaProfesores = new javax.swing.JTable();
        modificarProfesor = new javax.swing.JButton();
        agregarProfesor = new javax.swing.JButton();
        eliminarProfesor = new javax.swing.JButton();
        tabCarreras = new javax.swing.JLayeredPane();
        tablaCarrerasScroll = new javax.swing.JScrollPane();
        tablaCarreras = new javax.swing.JTable();
        modificarCarrera = new javax.swing.JButton();
        agregarCarrera = new javax.swing.JButton();
        eliminarCarrera = new javax.swing.JButton();
        tabConfiguracion = new javax.swing.JLayeredPane();
        jButton2 = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelDePesta単as.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        tablaSalones.setAutoCreateRowSorter(true);
        tablaSalones.setModel(new TablaSalones(salones));
        tablaSalonesScroll.setViewportView(tablaSalones);

        modificarSalon.setText("Modificar");
        modificarSalon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarSalonActionPerformed(evt);
            }
        });

        agregarSalon.setText("Agregar");
        agregarSalon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarSalonActionPerformed(evt);
            }
        });

        tabSalones.setLayer(tablaSalonesScroll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tabSalones.setLayer(modificarSalon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tabSalones.setLayer(agregarSalon, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout tabSalonesLayout = new javax.swing.GroupLayout(tabSalones);
        tabSalones.setLayout(tabSalonesLayout);
        tabSalonesLayout.setHorizontalGroup(
            tabSalonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tablaSalonesScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
            .addGroup(tabSalonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modificarSalon)
                .addGap(18, 18, 18)
                .addComponent(agregarSalon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabSalonesLayout.setVerticalGroup(
            tabSalonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabSalonesLayout.createSequentialGroup()
                .addComponent(tablaSalonesScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(tabSalonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarSalon)
                    .addComponent(agregarSalon))
                .addContainerGap())
        );

        panelDePesta単as.addTab("Salones", tabSalones);

        tablaProfesores.setAutoCreateRowSorter(true);
        tablaProfesores.setModel(new TablaProfesores(profesores));
        tablaProfesores.setFillsViewportHeight(true);
        tablaProfesores.setShowHorizontalLines(true);
        tablaProfesoresScroll.setViewportView(tablaProfesores);

        modificarProfesor.setText("Modificar");
        modificarProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarProfesorActionPerformed(evt);
            }
        });

        agregarProfesor.setText("Agregar");
        agregarProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarProfesorActionPerformed(evt);
            }
        });

        eliminarProfesor.setText("Eliminar");

        tabProfesores.setLayer(tablaProfesoresScroll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tabProfesores.setLayer(modificarProfesor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tabProfesores.setLayer(agregarProfesor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tabProfesores.setLayer(eliminarProfesor, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout tabProfesoresLayout = new javax.swing.GroupLayout(tabProfesores);
        tabProfesores.setLayout(tabProfesoresLayout);
        tabProfesoresLayout.setHorizontalGroup(
            tabProfesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tablaProfesoresScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabProfesoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modificarProfesor)
                .addGap(18, 18, 18)
                .addComponent(agregarProfesor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eliminarProfesor)
                .addContainerGap())
        );
        tabProfesoresLayout.setVerticalGroup(
            tabProfesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabProfesoresLayout.createSequentialGroup()
                .addComponent(tablaProfesoresScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(tabProfesoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarProfesor)
                    .addComponent(eliminarProfesor)
                    .addComponent(modificarProfesor))
                .addGap(7, 7, 7))
        );

        panelDePesta単as.addTab("Profesores", tabProfesores);

        tablaCarreras.setModel(new TablaCarreras(carreras)
        );
        tablaCarreras.setFillsViewportHeight(true);
        tablaCarrerasScroll.setViewportView(tablaCarreras);

        modificarCarrera.setText("Modificar");
        modificarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarCarreraActionPerformed(evt);
            }
        });

        agregarCarrera.setText("Agregar");
        agregarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCarreraActionPerformed(evt);
            }
        });

        eliminarCarrera.setText("Eliminar");
        eliminarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarCarreraActionPerformed(evt);
            }
        });

        tabCarreras.setLayer(tablaCarrerasScroll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tabCarreras.setLayer(modificarCarrera, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tabCarreras.setLayer(agregarCarrera, javax.swing.JLayeredPane.DEFAULT_LAYER);
        tabCarreras.setLayer(eliminarCarrera, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout tabCarrerasLayout = new javax.swing.GroupLayout(tabCarreras);
        tabCarreras.setLayout(tabCarrerasLayout);
        tabCarrerasLayout.setHorizontalGroup(
            tabCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tablaCarrerasScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
            .addGroup(tabCarrerasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modificarCarrera)
                .addGap(18, 18, 18)
                .addComponent(agregarCarrera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eliminarCarrera)
                .addContainerGap())
        );
        tabCarrerasLayout.setVerticalGroup(
            tabCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCarrerasLayout.createSequentialGroup()
                .addComponent(tablaCarrerasScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarCarrera)
                    .addComponent(agregarCarrera)
                    .addComponent(eliminarCarrera))
                .addContainerGap())
        );

        panelDePesta単as.addTab("Carreras", tabCarreras);

        jButton2.setText("Tema  Oscuro");

        tabConfiguracion.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout tabConfiguracionLayout = new javax.swing.GroupLayout(tabConfiguracion);
        tabConfiguracion.setLayout(tabConfiguracionLayout);
        tabConfiguracionLayout.setHorizontalGroup(
            tabConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(tabConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(tabConfiguracionLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        tabConfiguracionLayout.setVerticalGroup(
            tabConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(tabConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(tabConfiguracionLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        panelDePesta単as.addTab("Configuraci坦n", tabConfiguracion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelDePesta単as)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelDePesta単as)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modificarSalonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarSalonActionPerformed
        //su hay algun elemento de la tabla seleccionado se ejecuta el if
        if(tablaSalones.getSelectedRow() != -1) {
            //crea una nueva instancia de formulario profesor y le pasa los datos del profesor a modificar
            Salon salon = salones.get(tablaSalones.getSelectedRow());
            JFrame ventana = new FormularioSalon(conexion, salon);

            //centra la nueva pesta単a y la posiciona por encima de todas
            ventana.setLocationRelativeTo(this);
            ventana.setAlwaysOnTop(true);

            //desactiva la pesta単a de configuracion mientras
            this.setFocusable(false);
            this.setEnabled(false);
            //por temas de scope tengo que hacer esto, sino no puedo rreferenciar a la pesta単a de configuracion dentro del windowadapter
            JFrame ventanaConfig = this;
            //esto hace que cuando se cierre la ventana formulario, la pantalla de configuracion recupere el foco
            ventana.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    ventanaConfig.setEnabled(true);
                    ventanaConfig.setFocusable(true);
                    tablaSalones.updateUI();
                }
            });
            ventana.setVisible(true);
        }else{
            //en caso de no tener ningun salon para modificar tira un mensaje de error
            JOptionPane.showMessageDialog(this,"Por favor seleccione el Sal坦n que desea modificar","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_modificarSalonActionPerformed

    private void agregarSalonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarSalonActionPerformed
        //crea una ventana de formulario salon vacia
        JFrame ventana = new FormularioSalon(conexion);
        //centra la nueva pesta単a y la posiciona por encima de todas
        ventana.setLocationRelativeTo(this);
        ventana.setAlwaysOnTop(true);

        //desactiva la pesta単a de configuracion mientras
        this.setFocusable(false);
        this.setEnabled(false);
        //por temas de scope tengo que hacer esto, sino no puedo rreferenciar a la pesta単a de configuracion dentro del windowadapter
        JFrame ventanaConfig = this;
        //esto hace que cuando se cierre la ventana formulario, la pantalla de configuracion recupere el foco
        ventana.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                ventanaConfig.setEnabled(true);
                ventanaConfig.setFocusable(true);
                tablaSalones.updateUI();
            }
        });
        ventana.setVisible(true);
    }//GEN-LAST:event_agregarSalonActionPerformed

    private void eliminarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarCarreraActionPerformed
        if(0 == JOptionPane.showConfirmDialog(this,"多Desea proceder?","Confirmaci坦n",JOptionPane.YES_NO_OPTION)){
            for(Carrera carrera: carreras){
                if(carrera.getId_carrera() == (int)tablaCarreras.getValueAt(tablaCarreras.getSelectedRow(),0)){
                    carrera.borrarCarrera();
                    tablaCarreras.updateUI();
                    break;
                }
            }
        }
    }//GEN-LAST:event_eliminarCarreraActionPerformed

    private void agregarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCarreraActionPerformed
        //crea una ventana de formulario salon vacia
        JFrame ventana = new FormularioCarrera(conexion);
        //centra la nueva pesta単a y la posiciona por encima de todas
        ventana.setLocationRelativeTo(this);
        ventana.setAlwaysOnTop(true);

        //desactiva la pesta単a de configuracion mientras
        this.setFocusable(false);
        this.setEnabled(false);
        //por temas de scope tengo que hacer esto, sino no puedo rreferenciar a la pesta単a de configuracion dentro del windowadapter
        JFrame ventanaConfig = this;
        //esto hace que cuando se cierre la ventana formulario, la pantalla de configuracion recupere el foco
        ventana.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                ventanaConfig.setEnabled(true);
                ventanaConfig.setFocusable(true);
                tablaCarreras.updateUI();
            }
        });
        ventana.setVisible(true);
    }//GEN-LAST:event_agregarCarreraActionPerformed

    private void modificarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarCarreraActionPerformed
        //su hay algun elemento de la tabla seleccionado se ejecuta el if
        if(tablaCarreras.getSelectedRow() != -1) {
            //crea una nueva instancia de formulario profesor y le pasa los datos del profesor a modificar
            Carrera carrera = carreras.get(tablaCarreras.getSelectedRow());
            JFrame ventana = new FormularioCarrera(conexion, carrera);

            //centra la nueva pesta単a y la posiciona por encima de todas
            ventana.setLocationRelativeTo(this);
            ventana.setAlwaysOnTop(true);

            //desactiva la pesta単a de configuracion mientras
            this.setFocusable(false);
            this.setEnabled(false);
            //por temas de scope tengo que hacer esto, sino no puedo rreferenciar a la pesta単a de configuracion dentro del windowadapter
            JFrame ventanaConfig = this;
            //esto hace que cuando se cierre la ventana formulario, la pantalla de configuracion recupere el foco
            ventana.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    ventanaConfig.setEnabled(true);
                    ventanaConfig.setFocusable(true);
                    tablaCarreras.updateUI();
                }
            });
            ventana.setVisible(true);
        }else{
            //en caso de no tener ninguna carrera para modificar tira un mensaje de error
            JOptionPane.showMessageDialog(this,"Por favor seleccione la carrera que desea modificar","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_modificarCarreraActionPerformed

    private void agregarProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarProfesorActionPerformed
        //crea una nueva ventana formulario para cargar los datos del profesor
        JFrame ventana = new FormularioProfesor(conexion,carreras);
        //centra la nueva pesta単a y la posiciona por encima de todas
        ventana.setLocationRelativeTo(this);
        ventana.setAlwaysOnTop(true);

        //desactiva la pesta単a de configuracion mientras
        this.setFocusable(false);
        this.setEnabled(false);
        //por temas de scope tengo que hacer esto, sino no puedo rreferenciar a la pesta単a de configuracion dentro del windowadapter
        JFrame ventanaConfig = this;
        //esto hace que cuando se cierre la ventana formulario, la pantalla de configuracion recupere el foco
        ventana.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                ventanaConfig.setEnabled(true);
                ventanaConfig.setFocusable(true);
                tabProfesores.updateUI();
            }
        });
        ventana.setVisible(true);
    }//GEN-LAST:event_agregarProfesorActionPerformed

    private void modificarProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarProfesorActionPerformed
        //su hay algun elemento de la tabla seleccionado se ejecuta el if
        if(tablaProfesores.getSelectedRow() != -1) {
            //crea una nueva instancia de formulario profesor y le pasa los datos del profesor a modificar
            Profesor profesor = profesores.get(tablaProfesores.getSelectedRow());
            JFrame ventana = new FormularioProfesor(conexion, profesor, carreras);

            //centra la nueva pesta単a y la posiciona por encima de todas
            ventana.setLocationRelativeTo(this);
            ventana.setAlwaysOnTop(true);

            //desactiva la pesta単a de configuracion mientras
            this.setFocusable(false);
            this.setEnabled(false);
            //por temas de scope tengo que hacer esto, sino no puedo rreferenciar a la pesta単a de configuracion dentro del windowadapter
            JFrame ventanaConfig = this;
            //esto hace que cuando se cierre la ventana formulario, la pantalla de configuracion recupere el foco
            ventana.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    ventanaConfig.setEnabled(true);
                    ventanaConfig.setFocusable(true);
                    tabProfesores.updateUI();
                }
            });
            ventana.setVisible(true);
        }else{
            //en caso de no tener nungun profesor para modificar tira un mensaje de error
            JOptionPane.showMessageDialog(this,"Por favor seleccione el profesor que desea modificar","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_modificarProfesorActionPerformed
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        // Carga de tema
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception e) {
            e.printStackTrace();
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Configuracion().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarCarrera;
    private javax.swing.JButton agregarProfesor;
    private javax.swing.JButton agregarSalon;
    private javax.swing.JButton eliminarCarrera;
    private javax.swing.JButton eliminarProfesor;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton modificarCarrera;
    private javax.swing.JButton modificarProfesor;
    private javax.swing.JButton modificarSalon;
    private javax.swing.JTabbedPane panelDePesta単as;
    private javax.swing.JLayeredPane tabCarreras;
    private javax.swing.JLayeredPane tabConfiguracion;
    private javax.swing.JLayeredPane tabProfesores;
    private javax.swing.JLayeredPane tabSalones;
    private javax.swing.JTable tablaCarreras;
    private javax.swing.JScrollPane tablaCarrerasScroll;
    private javax.swing.JTable tablaProfesores;
    private javax.swing.JScrollPane tablaProfesoresScroll;
    private javax.swing.JTable tablaSalones;
    private javax.swing.JScrollPane tablaSalonesScroll;
    // End of variables declaration//GEN-END:variables
}
